import asyncio

from aiogram.types import Message

from rasp_devices.camera_features import save_picture
from bot.extract_info_from_command import extract_params


async def start_command(message: Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç, —è–∫–∏–π –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É —Ç–∞—Ä—ñ–ª–∫–∏ —Ç–≤–æ–≥–æ –¥–æ–º–∞—à–Ω—å–æ–≥–æ —É–ª—é–±–ª–µ–Ω—Ü—è, –∞ —Ç–∞–∫–æ–∂ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞ –Ω–∏–º(—Ç—ñ–ª—å–∫–∏ –π–æ–º—É –ø—Ä–æ —Ü–µ –Ω–µ –∫–∞–∂–∏ü§´). –î–ª—è –¥–µ—Ç–∞–ª—å–Ω—ñ—à–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –º–æ—é —Ä–æ–±–æ—Ç—É —Ç–∏—Ü—è–π /help")


async def help_command(message: Message):
    await message.answer("–í—Å—å–æ–≥–æ —î 4 –æ—Å–Ω–æ–≤–Ω–∏—Ö –∫–æ–º–∞–Ω–¥–∏: /take_picture, /fill_bowl, /calibrate_bowl, /calibrate_filling."
                         "\n–û—Å—Ç–∞–Ω–Ω—ñ –¥–≤—ñ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –º–µ–Ω—ñ —ñ –¥–∞–ª—ñ —Å–ª—ñ–¥—É–≤–∞—Ç–∏ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è–º, "
                         "–ø–µ—Ä—à—ñ –∂ –¥–≤—ñ –º–∞—é—Ç—å —Å–≤–æ—ó –æ—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ. "
                         "\n–î–ª—è –ø–æ—á–∞—Ç–∫—É /fill_bowl –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∞ –±–µ–∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤, –≤ —Ç–∞–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É "
                         "–±—É–¥–µ –Ω–∞—Å–∏–ø–∞–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –≤—ñ–¥–∫–∞–ª—ñ–±—Ä–æ–≤–∞–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–º—É, –∞–±–æ –∂ –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º -amount. " 
                         "–Ø–∫—â–æ –≤–∫–∞–∑—É—î—Ç—å—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä —Ç–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±—ñ–ª –ø—ñ—Å–ª—è –Ω—å–æ–≥–æ –≤–∫–∞–∑—É—î—Ç—å—Å—è –∑–Ω–∞—á–µ–Ω–Ω—è, "
                         "–¥–ª—è –¥–∞–Ω–æ—ó –∫–æ–º–∞–Ω–¥–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥ 0 –¥–æ 100(–¥–µ 100 - –ø–æ–≤–Ω–∞ —Ç–∞—Ä—ñ–ª–∫–∞, 50 - –ø–æ–ª–æ–≤–∏–Ω–∞, —ñ —Ç–¥)"
                         "\n–ö–æ–º–∞–Ω–¥–∞ /take_picture —Å—Ö–æ–∂–∞ –∑–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ—ó. –î–æ—Ç—É–ø–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏: -rotate, "
                         "-text, -brightness, -text_size, -text_color, -text_background, -effect, -exposure_mode, "
                         "-awb_mode, -res_x, -res_y. –ó–Ω–∞—á–µ–Ω–Ω—è -text –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–æ–∂–µ –±—É—Ç–∏ –Ω–µ–ø–µ—Ä–µ—Ä–≤–∞–Ω–∞ –ø—Ä–æ–±—ñ–ª–∞–º–∏ —Å—Ç—Ä—ñ—á–∫–∞"
                         "(–ø—Ä–∏–∫–ª–∞–¥_–Ω–µ–ø–µ—Ä–µ—Ä–≤–Ω–æ—ó_—Å—Ç—Ä—ñ—á–∫–∏), –∞–±–æ, —è–∫—â–æ –≤ —Ç–µ–∫—Å—Ç—ñ —î –ø—Ä–æ–±—ñ–ª–∏, –π–æ–≥–æ –≤–∞—Ä—Ç–æ –æ–±–≥–æ—Ä–Ω—É—Ç–∏ –≤ –ø–æ–¥–≤—ñ–π–Ω—ñ –ª–∞–ø–∫–∏. "
                         "–ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É —Ç–∞ –π–æ–≥–æ —Ñ–æ–Ω—É –º–∞—î –±—É—Ç–∏ –∑–∞–¥–∞–Ω–∏–π —Å–ª–æ–≤–µ—Å–Ω–æ, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ red —ñ —Ç–¥. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ -rotate "
                         "–∑–Ω–∞—á–µ–Ω–Ω—è -rotate: 0, 90, 180, 270, 360; -brightness: 0-100(–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 50); -text_size: "
                         "6-160. <a href='https://projects.raspberrypi.org/en/projects/getting-started-with-picamera/7'>–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ –ø—Ä–æ –∑–Ω–∞—á–µ–Ω–Ω—è —ñ–Ω—à–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤.</a>",
                         parse_mode='html',
                         disable_web_page_preview=True
                         )

async def take_picture(message: Message):
    options = await asyncio.create_task(extract_params(message.text))

    rotate = options.get("-rotate")
    rotate = int(rotate) if rotate else None
    text = options.get("-text")
    brightness = options.get("-brightness")
    brightness = int(brightness) if brightness else None
    res_x = options.get("-res_x")
    res_y = options.get("-res_y")
    res_x = int(res_x) if res_x else None
    res_y = int(res_y) if res_y else None

    text_size = options.get("-text_size")
    text_size = int(text_size) if text_size else None
    text_color = options.get("-text_color")
    text_background = options.get("-text_background")
    effect = options.get("-effect")
    exposure_mode = options.get("-exposure_mode")
    awb_mode = options.get("-awb_mode")

    image_path = await asyncio.create_task(
        save_picture(rotate=rotate, text=text, text_size=text_size, text_color=text_color,
                     text_background=text_background, effect=effect, exposure_mode=exposure_mode, awb_mode=awb_mode,
                     brightness=brightness, res_x=res_x, res_y=res_y))

    with open(image_path, "rb") as image:
        await message.answer_photo(image)
